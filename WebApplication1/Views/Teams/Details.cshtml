@model WebApplication1.Data.Entities.Team
@{
    ViewData["Title"] = $"Team Details: {Model.Name}";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int memberCardRenderIndex = 0;
    int reviewRenderIndex = 0;
}

@section Styles {
    <style>
        :root { /* Fallback if not inherited */
            --primary-color: #e94560;
            --secondary-color: #1abc9c;
            /* ... other theme variables ... */
        }

        .team-details-body { /* Apply gradient to body or a main wrapper if needed */
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            color: #e0e0e0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            overflow-x: hidden;
        }

        .details-page-container {
            max-width: 1100px;
            margin: 30px auto;
            padding: 25px;
            background: rgba(255, 255, 255, 0.04);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            box-shadow: 0 15px 45px rgba(0, 0, 0, 0.3);
            animation: fadeInScaleUpDetails 0.9s ease-out forwards;
        }

        @@keyframes fadeInScaleUpDetails {
            from {
                opacity: 0;
                transform: scale(0.95);
            }

            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        .team-main-header {
            text-align: center;
            margin-bottom: 30px;
            animation: teamHeaderPopIn 0.8s 0.2s ease-out backwards;
        }

        .team-header-image-details {
            width: 100%;
            max-height: 400px;
            object-fit: cover;
            border-radius: 12px;
            margin-bottom: 20px;
            border: 4px solid var(--primary-color);
            box-shadow: 0 8px 25px rgba(233, 69, 96, 0.2);
        }

        .team-name-main-title {
            color: var(--primary-color);
            font-size: 3em;
            font-weight: 700;
            text-shadow: 0 0 12px var(--primary-color);
        }

        @@keyframes teamHeaderPopIn {
            from {
                opacity: 0;
                transform: translateY(-30px) scale(0.9);
            }

            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }


        .section-divider {
            border-color: rgba(255,255,255,0.15) !important;
            margin-top: 40px;
            margin-bottom: 40px;
            animation: stretchIn 1s 0.5s ease-out forwards;
            transform-origin: center;
            transform: scaleX(0);
        }

        @@keyframes stretchIn {
            to {
                transform: scaleX(1);
            }
        }


        .details-section-title {
            color: var(--secondary-color);
            margin-top: 30px;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid var(--secondary-color);
            font-size: 2rem;
            font-weight: 600;
            text-align: center;
            text-shadow: 0 0 8px var(--secondary-color);
            animation: fadeInUpText 0.6s 0.4s ease-out forwards;
            opacity: 0;
        }

        @@keyframes fadeInUpText {
            from {
                opacity: 0;
                transform: translateY(15px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }


        .team-info-blocks {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }

        .info-block-item {
            background: rgba(255, 255, 255, 0.07);
            padding: 20px;
            border-radius: 10px;
            border: 1px solid rgba(255,255,255,0.1);
            animation: infoBlockPopIn 0.5s ease-out forwards;
            opacity: 0;
        }

            .info-block-item dt {
                font-weight: 600;
                color: var(--secondary-color);
                margin-bottom: 5px;
                font-size: 0.9rem;
                text-transform: uppercase;
            }

            .info-block-item dd {
                margin-left: 0;
                font-size: 1.1rem;
                color: var(--text-color);
                word-wrap: break-word;
            }

            .info-block-item.full-width-info { /* For description */
                grid-column: 1 / -1;
            }

                .info-block-item.full-width-info dd {
                    line-height: 1.7;
                }

        @@keyframes infoBlockPopIn {
            from {
                opacity: 0;
                transform: scale(0.8) rotateX(-20deg);
            }

            to {
                opacity: 1;
                transform: scale(1) rotateX(0deg);
            }
        }

        .team-member-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(255,255,255,0.08);
            animation: memberCardAppear 0.5s ease-out forwards;
            opacity: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100%;
        }

            .team-member-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.3);
            }

        .team-member-image {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 12px;
            border: 3px solid var(--secondary-color);
        }

        .team-member-name a {
            color: var(--secondary-color);
            font-weight: bold;
            text-decoration: none;
            font-size: 1.15rem;
        }

            .team-member-name a:hover {
                color: var(--text-light);
                text-decoration: underline;
            }

        .team-member-rating {
            font-size: 0.9em;
            color: var(--text-muted-color);
        }

        @@keyframes memberCardAppear {
            from {
                opacity: 0;
                transform: perspective(500px) rotateY(30deg) scale(0.9);
            }

            to {
                opacity: 1;
                transform: perspective(500px) rotateY(0deg) scale(1);
            }
        }


        .review-item-detailed { /* Renamed from .review-item to avoid conflict if global styles exist */
            background: rgba(0, 0, 0, 0.25);
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 15px;
            border-left: 5px solid var(--primary-color);
            animation: reviewItemSlideIn 0.5s ease-out forwards;
            opacity: 0;
        }

        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

            .review-header .reviewer-name {
                font-weight: bold;
                color: var(--text-light);
                font-size: 1.1em;
            }

            .review-header .review-date {
                font-size: 0.85rem;
                color: var(--text-muted-color);
            }

        .star-rating-display-detailed span {
            color: #f1c40f;
            font-size: 1.1em;
            margin-right: 1px;
        }

        .review-comment {
            color: var(--text-muted-color);
            line-height: 1.6;
        }

        @@keyframes reviewItemSlideIn {
            from {
                opacity: 0;
                transform: translateX(-25px);
            }

            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .team-action-buttons .btn { /* General button styling from _Layout should apply */
            margin-right: 10px;
            margin-top: 10px;
            font-weight: bold;
            padding: 10px 22px;
            border-radius: 25px;
        }

        .btn-secondary-custom { /* Reusing this from your original file */
            background-color: #4a4a5a;
            border-color: #4a4a5a;
            color: #e0e0e0;
        }

            .btn-secondary-custom:hover {
                background-color: #5a5a6a;
                border-color: #5a5a6a;
            }

    </style>
}

<div class="details-page-container">
    <div class="team-main-header">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <img src="@Model.ImageUrl" alt="Team Logo for @Model.Name" class="details-header-image" />
        }
        else
        {
            <img src="/images/default-team.png" alt="Default Team Logo" class="details-header-image" />
        }
        <h1 class="team-name-main-title">@Model.Name</h1>
    </div>

    <h2 class="details-section-title">Team Information</h2>
    <div class="team-info-blocks">
        <div class="info-block-item" style="animation-delay: 0.1s;">
            <dl><dt>Price Per Hour</dt><dd>@Model.PricePerHour.ToString("C2")</dd></dl>
        </div>
        <div class="info-block-item" style="animation-delay: 0.2s;">
            <dl><dt>Date Created</dt><dd>@Model.DateCreated.ToString("MMMM dd, yyyy")</dd></dl>
        </div>
        <div class="info-block-item" style="animation-delay: 0.3s;">
            <dl><dt>Overall Rating</dt><dd>@Model.Rating.ToString("F1") / 5 <i class="fas fa-star" style="color:#f1c40f;"></i></dd></dl>
        </div>
        @if (!string.IsNullOrEmpty(Model.Description))
        {
            <div class="info-block-item full-width-info" style="animation-delay: 0.4s;">
                <dl><dt>Description</dt><dd class="description-text">@Html.Raw(Model.Description.Replace("\n", "<br />"))</dd></dl>
            </div>
        }
    </div>

    <hr class="section-divider" />

    <h2 class="details-section-title">Team Members (@(Model.Players?.Count ?? 0))</h2>
    @if (Model.Players != null && Model.Players.Any())
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var player in Model.Players)
            {
                memberCardRenderIndex++;
                <div class="col">
                    <div class="team-member-card h-100" style="animation-delay: @(memberCardRenderIndex * 0.07)s;">
                        <img src="@(string.IsNullOrEmpty(player.ImageUrl) ? "/images/default-player.png" : player.ImageUrl)" alt="Photo of @player.GamerTag" class="team-member-image" />
                        <h5 class="team-member-name mt-2">
                            <a asp-controller="Players" asp-action="Details" asp-route-id="@player.Id">@player.GamerTag</a>
                        </h5>
                        @if (player.Rating > 0)
                        {
                            <p class="mb-0 team-member-rating"><small>Rating: @player.Rating.ToString("F1")/5</small></p>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-center text-muted-color mt-3" style="animation:fadeInUpText 0.5s 0.2s ease-out forwards; opacity:0;">No players are currently assigned to this team.</p>
    }

    <hr class="section-divider" />

    <h2 class="details-section-title">Team Reviews (@(Model.Reviews?.Count ?? 0))</h2>
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        @foreach (var review in Model.Reviews.OrderByDescending(r => r.ReviewDate))
        {
            reviewRenderIndex++;
            <div class="review-item-detailed" style="animation-delay: @(reviewRenderIndex * 0.07)s;">
                <div class="review-header">
                    <span class="reviewer-name">@review.ReviewerName</span>
                    <span class="review-date">@review.ReviewDate.ToString("MMM dd, yyyy 'at' hh:mm tt")</span>
                </div>
                <div class="star-rating-display-detailed mb-2">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <span class="star">@(i <= review.StarRating ? "★" : "☆")</span>
                    }
                </div>
                <p class="review-comment">@Html.Raw(review.CommentText.Replace("\n", "<br />"))</p>
            </div>
        }
    }
    else
    {
        <p class="text-center text-muted-color mt-3" style="animation:fadeInUpText 0.5s 0.2s ease-out forwards; opacity:0;">This team has no reviews yet.</p>
    }

    <div class="mt-4 pt-3 team-action-buttons text-center" style="border-top: 1px solid rgba(255,255,255,0.1);">
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit Team</a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete Team</a>
        }
        <a asp-action="TeamHire" asp-controller="Home" class="btn btn-secondary">Back to Team List</a>
    </div>
</div>