@model WebApplication1.Models.PlayerCreateViewModel
@{
    ViewData["Title"] = "Add New Player";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
        color: #e0e0e0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        overflow-x: hidden;
        padding-top: 20px;
        padding-bottom: 50px;
    }

    .form-container {
        background-color: rgba(16, 20, 30, 0.85); /* Darker, slightly transparent */
        padding: 35px 40px;
        border-radius: 15px;
        border: 1px solid rgba(0, 255, 144, 0.2);
        box-shadow: 0 10px 35px rgba(0, 255, 144, 0.1), 0 0 15px rgba(0,0,0,0.3) inset;
        max-width: 750px;
        margin: 40px auto;
        animation: fadeInScaleUp 0.8s ease-out forwards;
    }

        .form-container h1 {
            color: #00ff91;
            text-align: center;
            margin-bottom: 30px;
            font-weight: bold;
            font-size: 2.5em;
            text-shadow: 0 0 8px rgba(0, 255, 144, 0.5), 0 0 15px rgba(0, 255, 144, 0.3);
            animation: pulsateGreenTitle 2.5s infinite alternate;
        }

    .form-group {
        margin-bottom: 22px;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.5s ease-out forwards;
    }

        .form-group:nth-child(1) {
            animation-delay: 0.05s;
        }

        .form-group:nth-child(2) {
            animation-delay: 0.1s;
        }

        .form-group:nth-child(3) {
            animation-delay: 0.15s;
        }

        .form-group:nth-child(4) {
            animation-delay: 0.2s;
        }

        .form-group:nth-child(5) {
            animation-delay: 0.25s;
        }

        .form-group:nth-child(6) {
            animation-delay: 0.3s;
        }
        /* InitialReviews section */
        .form-group:nth-child(7) {
            animation-delay: 0.35s;
        }
        /* ImageFile */
        .form-group:nth-child(8) {
            animation-delay: 0.40s;
        }
        /* Submit button */
        .form-group:nth-child(9) {
            animation-delay: 0.45s;
        }
    /* Back link */


    label.control-label {
        color: #00ff91;
        font-weight: 600; /* Slightly less bold */
        margin-bottom: 8px;
        display: block;
        font-size: 1em;
    }

    .form-control, .form-select {
        background-color: rgba(0,0,0,0.3); /* Darker input */
        border: 1px solid #00ff91;
        color: #e0e0e0;
        border-radius: 8px; /* More rounded */
        padding: 12px 15px; /* More padding */
        transition: border-color 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
        font-size: 1em;
    }

        .form-control[type="file"] {
            padding: 9px 15px;
        }

            .form-control[type="file"]::file-selector-button {
                background: #00ff91;
                color: #1a1a2e;
                border: none;
                padding: 8px 12px;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .form-control[type="file"]::file-selector-button:hover {
                    background: #00dd80;
                }


        .form-control:focus, .form-select:focus {
            background-color: rgba(0,0,0,0.4);
            border-color: #00ff91;
            box-shadow: 0 0 0 0.25rem rgba(0, 255, 144, 0.25), 0 0 15px rgba(0, 255, 144, 0.3);
            color: #fff;
        }

    textarea.form-control {
        min-height: 100px;
    }

    .text-danger {
        color: #ff4d4d !important;
        font-size: 0.85em;
        margin-top: 6px;
        display: block;
    }

    .validation-summary-errors ul {
        list-style: none;
        padding-left: 0;
    }

    .validation-summary-errors li {
        padding: 5px;
        border-left: 3px solid #ff4d4d;
        margin-bottom: 5px;
        background-color: rgba(255, 77, 77, 0.1);
    }


    .initial-reviews-heading {
        color: #00ff91;
        margin-bottom: 18px;
        font-size: 1.5em;
        font-weight: 600;
        border-bottom: 1px solid rgba(0,255,144,0.2);
        padding-bottom: 8px;
    }

    .review-sub-form {
        border-left: 4px solid #00ff91;
        background-color: rgba(0,0,0,0.2);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px !important;
        animation: fadeInUpSubtle 0.5s ease-out forwards;
        opacity: 0;
        transform: translateY(10px);
        position: relative;
    }

        .review-sub-form h5 {
            color: #00dd80;
            margin-top: 0;
            margin-bottom: 15px;
        }

        .review-sub-form hr {
            border-color: rgba(0, 255, 144, 0.15) !important;
            margin-top: 15px;
            margin-bottom: 10px;
        }

    .remove-review-button {
        background-color: #e74c3c;
        border-color: #e74c3c;
        color: white;
        font-size: 0.8em;
        padding: 4px 8px;
        float: right; /* Position to the right */
        margin-top: -5px; /* Adjust alignment */
    }

        .remove-review-button:hover {
            background-color: #c0392b;
            border-color: #c0392b;
        }


    #addReviewButton {
        background: linear-gradient(45deg, #00dd80, #00ee99);
        border: none;
        color: #111;
        font-weight: bold;
        padding: 8px 15px;
        border-radius: 20px;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        #addReviewButton:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 15px rgba(0, 221, 128, 0.4);
        }

    .btn-submit-player {
        background: linear-gradient(45deg, #00ff91, #00e080);
        color: #1a1a2e;
        font-weight: bold;
        padding: 14px 30px;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
        display: block;
        width: 100%;
        font-size: 1.15em;
        margin-top: 15px;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

        .btn-submit-player:hover {
            background: linear-gradient(45deg, #00e080, #00ff91);
            transform: scale(1.02) translateY(-2px);
            box-shadow: 0 10px 30px rgba(0, 255, 144, 0.5);
        }

    .back-link-wrapper { /* Wrapper for centering */
        text-align: center;
        margin-top: 25px;
    }

    .back-link {
        display: inline-block;
        color: #00ff91;
        text-decoration: none;
        transition: color 0.3s ease, text-shadow 0.3s ease;
        font-weight: 500;
        padding: 8px 15px;
        border: 1px solid transparent;
        border-radius: 5px;
    }

        .back-link:hover {
            color: #fff;
            text-shadow: 0 0 5px #00ff91;
            border-color: #00ff91;
            background-color: rgba(0,255,144,0.1);
        }

    @@keyframes fadeInScaleUp {
        from {
            opacity: 0;
            transform: scale(0.92);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUpSubtle { /* For review sub-forms */
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeOutDown {
        from {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 0;
            transform: translateY(20px);
        }
    }

    @@keyframes pulsateGreenTitle {
        0% {
            text-shadow: 0 0 8px rgba(0, 255, 144, 0.4), 0 0 12px rgba(0, 255, 144, 0.2);
        }

        100% {
            text-shadow: 0 0 12px rgba(0, 255, 144, 0.7), 0 0 20px rgba(0, 255, 144, 0.5), 0 0 30px rgba(0,221,128,0.3);
        }
    }
</style>

<div class="form-container">
    <h1>@ViewData["Title"]</h1>
    <hr style="border-color: rgba(0, 255, 144, 0.2); margin-bottom: 25px;" />
    <div class="row">
        <div class="col-md-12">
            <form asp-action="Create" asp-controller="Players" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger form-group"></div>

                <div class="form-group">
                    <label asp-for="GamerTag" class="control-label"></label>
                    <input asp-for="GamerTag" class="form-control" />
                    <span asp-validation-for="GamerTag" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PricePerHour" class="control-label"></label>
                    <input asp-for="PricePerHour" type="number" step="0.01" class="form-control" />
                    <span asp-validation-for="PricePerHour" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Rating" class="control-label"></label>
                    <input asp-for="Rating" type="number" step="0.1" min="0" max="5" class="form-control" />
                    <span asp-validation-for="Rating" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <h4 class="initial-reviews-heading">Initial Reviews (Optional)</h4>
                    <div id="initialReviewsContainer">
                        @if (Model.InitialReviews != null)
                        {
                            for (int i = 0; i < Model.InitialReviews.Count; i++)
                            {
                                <div class="review-sub-form mb-3 p-3 border rounded" style="animation-delay: @(i * 0.1)s">
                                    <h5>Review @(i + 1)</h5>
                                    <input type="hidden" name="InitialReviews.Index" value="@i" />

                                    <div class="form-group mb-2">
                                        <label asp-for="InitialReviews[i].ReviewerName" class="control-label"></label>
                                        <input asp-for="InitialReviews[i].ReviewerName" class="form-control" />
                                        <span asp-validation-for="InitialReviews[i].ReviewerName" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-2">
                                        <label asp-for="InitialReviews[i].CommentText" class="control-label"></label>
                                        <textarea asp-for="InitialReviews[i].CommentText" class="form-control" rows="2"></textarea>
                                        <span asp-validation-for="InitialReviews[i].CommentText" class="text-danger"></span>
                                    </div>
                                    <div class="form-group mb-2">
                                        <label asp-for="InitialReviews[i].StarRating" class="control-label"></label>
                                        <input asp-for="InitialReviews[i].StarRating" type="number" class="form-control" min="1" max="5" />
                                        <span asp-validation-for="InitialReviews[i].StarRating" class="text-danger"></span>
                                    </div>
                                    <button type="button" class="btn btn-sm remove-review-button mt-1">Remove Review</button>
                                    <hr style="border-color: rgba(0, 255, 144, 0.1);" />
                                </div>
                            }
                        }
                    </div>
                    <button type="button" id="addReviewButton" class="btn btn-sm mt-2">+ Add Initial Review</button>
                </div>

                <div class="form-group">
                    <label asp-for="ImageFile" class="control-label"></label>
                    <input asp-for="ImageFile" type="file" class="form-control" />
                    <span asp-validation-for="ImageFile" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create Player" class="btn-submit-player" />
                </div>
                <div class="form-group back-link-wrapper">
                    <a asp-action="PlayerHire" asp-controller="Players" class="back-link">Back to Player List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addReviewButton = document.getElementById('addReviewButton');
            const reviewsContainer = document.getElementById('initialReviewsContainer');

            function addReviewForm(index) {
                const actualIndex = index;
                const reviewFormHtml = `
                            <div class="review-sub-form mb-3 p-3 border rounded" style="opacity:0; transform: translateY(10px);">
                                <h5>Review ${actualIndex + 1}</h5>
                                <input type="hidden" name="InitialReviews.Index" value="${actualIndex}" />
                                <div class="form-group mb-2">
                                    <label class="control-label" for="InitialReviews_${actualIndex}__ReviewerName">Reviewer Name</label>
                                    <input type="text" name="InitialReviews[${actualIndex}].ReviewerName" id="InitialReviews_${actualIndex}__ReviewerName" class="form-control" data-val="true" data-val-required="Reviewer name cannot be empty." data-val-length-max="100" data-val-length="Reviewer name must be a string with a maximum length of 100." />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="InitialReviews[${actualIndex}].ReviewerName" data-valmsg-replace="true"></span>
                                </div>
                                <div class="form-group mb-2">
                                    <label class="control-label" for="InitialReviews_${actualIndex}__CommentText">Comment</label>
                                    <textarea name="InitialReviews[${actualIndex}].CommentText" id="InitialReviews_${actualIndex}__CommentText" class="form-control" rows="2" data-val="true" data-val-required="Comment cannot be empty." data-val-length-min="5" data-val-length-max="1000" data-val-length="Comment must be between 5 and 1000 characters."></textarea>
                                    <span class="text-danger field-validation-valid" data-valmsg-for="InitialReviews[${actualIndex}].CommentText" data-valmsg-replace="true"></span>
                                </div>
                                <div class="form-group mb-2">
                                    <label class="control-label" for="InitialReviews_${actualIndex}__StarRating">Star Rating (1-5)</label>
                                    <input type="number" name="InitialReviews[${actualIndex}].StarRating" id="InitialReviews_${actualIndex}__StarRating" class="form-control" min="1" max="5" value="5" data-val="true" data-val-range="Rating must be between 1 and 5 stars." data-val-range-min="1" data-val-range-max="5" data-val-required="The StarRating field is required." />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="InitialReviews[${actualIndex}].StarRating" data-valmsg-replace="true"></span>
                                </div>
                                <button type="button" class="btn btn-sm remove-review-button mt-1">Remove Review</button>
                                <hr style="border-color: rgba(0, 255, 144, 0.1);"/>
                            </div>`;

                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = reviewFormHtml;
                const newReviewForm = tempDiv.firstElementChild;

                reviewsContainer.appendChild(newReviewForm);

                setTimeout(() => {
                    newReviewForm.style.animation = 'fadeInUpSubtle 0.5s ease-out forwards';
                    newReviewForm.style.opacity = '1';
                    newReviewForm.style.transform = 'translateY(0)';
                }, 50);

                var form = $(newReviewForm).closest('form');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);
            }

            addReviewButton.addEventListener('click', function () {
                let currentMaxIndex = -1;
                reviewsContainer.querySelectorAll('input[name="InitialReviews.Index"]').forEach(input => {
                    const val = parseInt(input.value);
                    if (val > currentMaxIndex) {
                        currentMaxIndex = val;
                    }
                });
                addReviewForm(currentMaxIndex + 1);
            });

            reviewsContainer.addEventListener('click', function (event) {
                if (event.target && event.target.classList.contains('remove-review-button')) {
                    const reviewFormToRemove = event.target.closest('.review-sub-form');
                    if (reviewFormToRemove) {
                        reviewFormToRemove.style.animation = 'fadeOutDown 0.3s ease-out forwards';
                        setTimeout(() => {
                            reviewFormToRemove.remove();
                        }, 300);
                    }
                }
            });
        });
    </script>
}