@model WebApplication1.Models.PlayerDetailViewModel
@{
    ViewData["Title"] = $"Details for {Model.Player.GamerTag}";
    var player = Model.Player;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
        color: #e0e0e0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        overflow-x: hidden;
        padding-top: 20px;
        padding-bottom: 50px;
    }

    .page-title-details {
        color: #e94560;
        text-align: center;
        margin-bottom: 30px;
        font-size: 2.8em;
        font-weight: bold;
        text-shadow: 0 0 10px #e94560, 0 0 20px #e94560;
        animation: pulsateTitle 3s infinite alternate;
    }

    .player-details-container {
        max-width: 1000px;
        margin: 20px auto;
        padding: 20px;
        background: rgba(255, 255, 255, 0.04);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 20px;
        box-shadow: 0 15px 45px rgba(0, 0, 0, 0.3);
        animation: fadeInScaleUp 0.9s ease-out forwards;
    }

    .player-main-layout {
        display: flex;
        flex-direction: column;
        gap: 30px;
        margin-bottom: 30px;
    }

    .player-visuals {
        text-align: center;
        animation: slideInFromLeft 0.7s ease-out forwards;
        flex-shrink: 0;
    }

    .player-image-large-details {
        max-width: 100%;
        width: 280px;
        height: 280px;
        object-fit: cover;
        border-radius: 50%;
        border: 6px solid #e94560;
        box-shadow: 0 0 25px #e94560, 0 0 45px rgba(233, 69, 96, 0.5);
        transition: transform 0.5s ease, box-shadow 0.5s ease;
    }

        .player-image-large-details:hover {
            transform: scale(1.08) rotate(4deg);
            box-shadow: 0 0 35px #e94560, 0 0 60px rgba(233, 69, 96, 0.7);
        }

    .player-core-info {
        text-align: center;
        animation: fadeInContent 0.8s 0.2s ease-out forwards;
        opacity: 0;
    }

    .player-gamertag-title {
        color: #fff;
        font-size: 2.2em;
        font-weight: 700;
        margin-top: 10px;
        margin-bottom: 8px;
        letter-spacing: 1px;
    }

    .player-description-text {
        font-size: 1.1em;
        line-height: 1.6;
        color: #b0b0b0;
        max-width: 600px;
        margin: 0 auto 20px auto;
    }

    .player-stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 20px;
        margin-top: 20px;
        animation: fadeInUpStats 0.8s 0.4s ease-out forwards;
        opacity: 0;
    }

    .stat-block {
        background: rgba(255, 255, 255, 0.07);
        padding: 20px;
        border-radius: 12px;
        text-align: center;
        border: 1px solid rgba(255,255,255,0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .stat-block:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
        }

    .stat-label {
        display: block;
        font-size: 0.9em;
        color: #1abc9c;
        margin-bottom: 8px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .stat-value {
        font-size: 1.4em;
        color: #fff;
        font-weight: 700;
    }

        .stat-value .fas.fa-star {
            color: #f1c40f;
            margin-left: 5px;
        }

    .action-buttons-details {
        margin-top: 30px;
        margin-bottom: 30px;
        text-align: center;
        animation: fadeInUpButtons 0.6s 0.6s ease-out forwards;
        opacity: 0;
    }

        .action-buttons-details .btn {
            margin: 8px;
            min-width: 130px;
            padding: 10px 20px;
            font-size: 0.95em;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0,0,0, 0.2);
            border-radius: 8px;
        }

            .action-buttons-details .btn:hover {
                transform: translateY(-3px) scale(1.05);
                box-shadow: 0 6px 15px rgba(0,0,0, 0.3);
            }

    .btn-warning {
        background-color: #f1c40f;
        border-color: #f1c40f;
        color: #2c3e50;
    }

    .btn-danger {
        background-color: #e74c3c;
        border-color: #e74c3c;
        color: #fff;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: #fff;
    }

    .btn-info {
        background-color: #3498db;
        border-color: #3498db;
        color: #fff;
    }

    .reviews-section-title {
        color: #1abc9c;
        text-align: center;
        font-size: 2.2em;
        font-weight: bold;
        margin-top: 40px;
        margin-bottom: 25px;
        text-shadow: 0 0 8px #1abc9c;
        animation: fadeInUp 0.6s 0.8s ease-out forwards;
        opacity: 0;
    }

    #reviewsContainer .loading-text, #reviewsContainer .no-reviews-text, #reviewsContainer .error-text {
        text-align: center;
        font-size: 1.2em;
        padding: 20px;
        color: #b0b0b0;
        min-height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(0,0,0,0.1);
        border-radius: 8px;
    }

    #reviewsContainer .error-text {
        color: #e74c3c;
    }

    #reviewsContainer .list-group {
        list-style: none;
        padding: 0;
    }

    #reviewsContainer .list-group-item {
        background: rgba(0, 0, 0, 0.25);
        border: 1px solid rgba(255,255,255,0.1);
        border-left: 5px solid #1abc9c;
        padding: 20px;
        margin-bottom: 15px;
        border-radius: 10px;
        color: #c0c0c0;
        box-shadow: 0 4px 12px rgba(0,0,0,0.25);
        animation: slideInReviewItem 0.5s ease-out forwards;
        opacity: 0;
    }

        #reviewsContainer .list-group-item h5 {
            color: #e94560;
            margin-top: 0;
            margin-bottom: 8px;
            font-size: 1.2em;
        }

            #reviewsContainer .list-group-item h5 small.text-muted {
                color: #888 !important;
                font-size: 0.8em;
            }

        #reviewsContainer .list-group-item p {
            margin-bottom: 0;
            line-height: 1.6;
        }

    .review-stars-display {
        font-size: 0.9em;
        color: #f1c40f;
    }

    #reviewsPagination .pagination {
        justify-content: center;
        margin-top: 30px;
    }

    #reviewsPagination .page-item .page-link {
        background-color: transparent;
        border: 1px solid #e94560;
        color: #e94560;
        margin: 0 4px;
        border-radius: 8px;
        transition: all 0.3s ease;
        padding: 8px 15px;
    }

        #reviewsPagination .page-item .page-link:hover {
            background-color: #e94560;
            color: #fff;
            box-shadow: 0 0 12px #e94560;
        }

    #reviewsPagination .page-item.active .page-link {
        background-color: #e94560;
        color: #fff;
        border-color: #e94560;
        box-shadow: 0 0 18px #e94560;
    }

    #reviewsPagination .page-item.disabled .page-link {
        color: #5a5a5a;
        border-color: #5a5a5a;
        background-color: rgba(255,255,255,0.05);
    }

    @@media (min-width: 768px) {
        .player-main-layout {
            flex-direction: row;
            align-items: flex-start;
        }

        .player-visuals {
            text-align: left;
            margin-right: 30px;
        }

        .player-core-info {
            text-align: left;
        }

        .player-description-text {
            margin: 0 0 20px 0;
        }
    }

    @@keyframes pulsateTitle {
        0% {
            text-shadow: 0 0 5px #e94560, 0 0 10px #e94560;
        }

        100% {
            text-shadow: 0 0 10px #e94560, 0 0 20px #e94560, 0 0 30px #ff5777;
        }
    }

    @@keyframes fadeInScaleUp {
        from {
            opacity: 0;
            transform: scale(0.92);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @@keyframes slideInFromLeft {
        from {
            opacity: 0;
            transform: translateX(-50px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @@keyframes fadeInContent {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUpStats {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUpButtons {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideInReviewItem {
        from {
            opacity: 0;
            transform: translateX(-30px) scale(0.95);
        }

        to {
            opacity: 1;
            transform: translateX(0) scale(1);
        }
    }
</style>

<h1 class="page-title-details">@ViewData["Title"]</h1>

<div class="player-details-container">
    <div class="player-main-layout">
        <div class="player-visuals">
            @if (!string.IsNullOrEmpty(player.ImageUrl))
            {
                <img src="@player.ImageUrl" alt="Image of @player.GamerTag" class="player-image-large-details" />
            }
            else
            {
                <img src="/images/default-player-large.png" alt="Default Player Image" class="player-image-large-details" />
            }
        </div>

        <div class="player-core-info">
            <div class="player-gamertag-title">@Html.DisplayFor(model => player.GamerTag)</div>
            @if (!string.IsNullOrEmpty(player.Description))
            {
                <p class="player-description-text">@Html.DisplayFor(model => player.Description)</p>
            }

            <div class="player-stats-grid">
                <div class="stat-block">
                    <span class="stat-label">@Html.DisplayNameFor(model => player.PricePerHour)</span>
                    <span class="stat-value">@player.PricePerHour.ToString("C") / hr</span>
                </div>
                <div class="stat-block">
                    <span class="stat-label">@Html.DisplayNameFor(model => player.Rating)</span>
                    <span class="stat-value">@Html.DisplayFor(model => player.Rating) / 5 <i class="fas fa-star"></i></span>
                </div>
                <div class="stat-block">
                    <span class="stat-label">Team</span>
                    <span class="stat-value">@(player.Team != null ? player.Team.Name : "N/A")</span>
                </div>
            </div>
        </div>
    </div>

    <div class="action-buttons-details">
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Edit" asp-route-id="@player.Id" class="btn btn-warning">Edit Player</a>
            <a asp-action="Delete" asp-route-id="@player.Id" class="btn btn-danger">Delete Player</a>
        }
        <a asp-controller="Reviews" asp-action="Create" asp-route-playerId="@player.Id" class="btn btn-info">Add Review</a>
        <a asp-action="PlayerHire" class="btn btn-secondary">Back to List</a>
    </div>

    <hr style="border-color: rgba(255,255,255,0.1); margin-top: 30px; margin-bottom: 30px;" />
    <h4 class="reviews-section-title">Player Reviews</h4>
    <div id="reviewsContainer">
        <p class="loading-text">Loading reviews...</p>
    </div>
    <div id="reviewsPagination" class="mt-3">
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            var playerId = @player.Id;
            loadReviews(playerId, 1);

            $('#reviewsPagination').on('click', 'button.page-link', function (e) {
                e.preventDefault();
                var page = $(this).data('page');
                if (page && !$(this).parent().hasClass('disabled') && !$(this).parent().hasClass('active')) {
                    loadReviews(playerId, page);
                }
            });
        });

        let reviewAnimationDelayCounter = 0;

        function loadReviews(playerId, page) {
            reviewAnimationDelayCounter = 0;
            $('#reviewsContainer').html('<p class="loading-text">Loading reviews...</p>');
            $('#reviewsPagination').html('');

            $.ajax({
                url: '/api/ReviewsApi/GetReviewsForPlayer/' + playerId,
                type: 'GET',
                data: { page: page },
                success: function (response) {
                    $('#reviewsContainer').empty();
                    if (response.reviews && response.reviews.length > 0) {
                        var reviewsHtml = '<ul class="list-group">';
                        $.each(response.reviews, function (index, review) {
                            reviewAnimationDelayCounter += 0.08;
                            let reviewStarsHtml = '';
                            for (let i = 1; i <= 5; i++) {
                                reviewStarsHtml += '<span class="review-stars-display" style="color:' + (i <= review.starRating ? "#f1c40f" : "#6c757d") + ';">★</span>';
                            }

                            reviewsHtml += '<li class="list-group-item" style="animation-delay:' + reviewAnimationDelayCounter + 's;">';
                            reviewsHtml += '<h5>' + escapeHtml(review.reviewerName) +
                                ' <small class="text-muted">(rated ' + review.starRating + '/5 on ' +
                                new Date(review.reviewDate).toLocaleDateString() + ')</small></h5>';
                            reviewsHtml += '<p>' + escapeHtml(review.commentText) + '</p>';
                            reviewsHtml += '<div style="text-align: right; margin-top: 5px;">' + reviewStarsHtml + '</div>';
                            reviewsHtml += '</li>';
                        });
                        reviewsHtml += '</ul>';
                        $('#reviewsContainer').html(reviewsHtml);
                    } else {
                        $('#reviewsContainer').html('<p class="no-reviews-text">No reviews found for this player.</p>');
                    }
                    renderPagination(response.playerId, response.currentPage, response.totalPages);
                },
                error: function (xhr, status, error) {
                    $('#reviewsContainer').html('<p class="error-text">Error loading reviews. Please try again later.</p>');
                    console.error("AJAX Error: ", status, error, xhr.responseText);
                }
            });
        }

        function renderPagination(playerId, currentPage, totalPages) {
            if (totalPages <= 1) {
                $('#reviewsPagination').html('');
                return;
            }
            var paginationHtml = '<nav aria-label="Reviews navigation"><ul class="pagination">';
            paginationHtml += '<li class="page-item ' + (currentPage === 1 ? 'disabled' : '') + '">';
            paginationHtml += '<button class="page-link" data-page="' + (currentPage - 1) + '" ' + (currentPage === 1 ? 'disabled' : '') + '>Previous</button></li>';
            for (let i = 1; i <= totalPages; i++) {
                paginationHtml += '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">';
                paginationHtml += '<button class="page-link" data-page="' + i + '">' + i + '</button></li>';
            }
            paginationHtml += '<li class="page-item ' + (currentPage === totalPages ? 'disabled' : '') + '">';
            paginationHtml += '<button class="page-link" data-page="' + (currentPage + 1) + '" ' + (currentPage === totalPages ? 'disabled' : '') + '>Next</button></li>';
            paginationHtml += '</ul></nav>';
            $('#reviewsPagination').html(paginationHtml);
        }

        function escapeHtml(unsafe) {
            if (unsafe === null || typeof unsafe === 'undefined') return '';
            return unsafe.toString()
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }
    </script>
}