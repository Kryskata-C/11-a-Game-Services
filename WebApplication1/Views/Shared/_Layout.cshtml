@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http // Required for Session
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@functions {
    string IsActive(string controller, string action, string area = "")
    {
        var routeData = ViewContext.RouteData;
        var currentController = routeData.Values["controller"] as string;
        var currentAction = routeData.Values["action"] as string;
        var currentArea = routeData.Values["area"] as string;

        bool controllerMatch = controller == currentController;
        bool actionMatch = action == currentAction;
        bool areaMatch = string.IsNullOrEmpty(area) ? string.IsNullOrEmpty(currentArea) : area == currentArea;

        return (controllerMatch && actionMatch && areaMatch) ? "active-link" : "";
    }

    async Task<decimal> GetCurrentUserBalanceAsync()
    {
        if (SignInManager.IsSignedIn(User))
        {
            var user = await UserManager.GetUserAsync(User);
            return user?.Balance ?? 0.00m;
        }
        return 0.00m;
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - 11-A Gaming</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        :root {
            --primary-accent-color: #e94560;
            --primary-accent-hover: #ff5777;
            --secondary-accent-color: #1abc9c;
            --secondary-accent-hover: #2ecc71;
            --green-accent-color: #00ff91;
            --green-accent-hover: #00dd80;
            --background-dark-1: #1a1a2e;
            --background-dark-2: #16213e;
            --background-dark-3: #0f3460;
            --surface-color: rgba(22, 33, 62, 0.85);
            --surface-color-opaque: #16213e;
            --border-color: rgba(255, 255, 255, 0.1);
            --border-accent-color: rgba(233, 69, 96, 0.3);
            --text-color: #e0e0e0;
            --text-muted-color: #a0a0b0;
            --text-light: #ffffff;
            --text-dark-on-light-bg: #1a1a2e;
            --font-family-main: 'Segoe UI', Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
            --animation-duration-fast: 0.3s;
            --animation-duration-normal: 0.5s;
            --animation-duration-slow: 0.8s;
        }

        body {
            font-family: var(--font-family-main);
            background: linear-gradient(135deg, var(--background-dark-1) 0%, var(--background-dark-2) 50%, var(--background-dark-3) 100%);
            background-attachment: fixed;
            color: var(--text-color);
            line-height: 1.7;
            margin: 0;
            padding-top: 70px;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            opacity: 0;
            animation: pageFadeIn var(--animation-duration-normal) ease-out forwards;
        }

        @@keyframes pageFadeIn {
            to {
                opacity: 1;
            }
        }

        h1, h2, h3, h4, h5, h6 {
            color: var(--text-light);
            font-weight: 600;
        }

        a {
            color: var(--primary-accent-color);
            text-decoration: none;
            transition: color var(--animation-duration-fast) ease-in-out;
        }

            a:hover {
                color: var(--primary-accent-hover);
                text-decoration: none;
            }

        .container, .container-fluid {
            padding-left: 15px;
            padding-right: 15px;
        }

        main {
            flex-grow: 1;
            padding-bottom: 60px;
        }

        .site-header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1030;
            background-color: var(--surface-color);
            backdrop-filter: blur(10px);
            padding: 0;
            border-bottom: 1px solid var(--border-color);
            box-shadow: 0 3px 15px rgba(0,0,0,0.3);
            transition: background-color var(--animation-duration-fast) ease;
        }

        .top-navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 1.5rem;
            height: 70px;
        }

        .navbar-brand {
            color: var(--primary-accent-color) !important;
            font-size: 1.8rem;
            font-weight: 700;
            letter-spacing: 1px;
            transition: transform var(--animation-duration-fast) ease, text-shadow 0.3s ease;
        }

            .navbar-brand:hover {
                transform: scale(1.05);
                text-shadow: 0 0 8px var(--primary-accent-hover);
            }

        .navbar-nav .nav-link {
            color: var(--text-muted-color) !important;
            padding: 0.6rem 1.1rem !important;
            transition: color var(--animation-duration-fast) ease, background-color var(--animation-duration-fast) ease, transform 0.2s ease;
            border-radius: 6px;
            margin: 0 0.3rem;
            font-weight: 500;
        }

            .navbar-nav .nav-link:hover {
                color: var(--text-light) !important;
                background-color: var(--primary-accent-color);
                transform: translateY(-2px);
            }

            .navbar-nav .nav-link.active-link {
                color: var(--text-light) !important;
                background-color: var(--primary-accent-color);
                font-weight: 700;
                box-shadow: 0 0 10px var(--primary-accent-color);
            }

        .navbar-nav .dropdown-menu {
            background-color: var(--surface-color-opaque);
            border: 1px solid var(--border-color);
            border-radius: 0.375rem;
            margin-top: 0.5rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
            padding: 0.5rem 0;
        }

        .navbar-nav .dropdown-item {
            color: var(--text-muted-color);
            padding: 0.5rem 1.2rem;
            transition: background-color var(--animation-duration-fast) ease, color var(--animation-duration-fast) ease;
        }

            .navbar-nav .dropdown-item:hover, .navbar-nav .dropdown-item.active-link {
                background-color: var(--primary-accent-color);
                color: var(--text-light);
            }

        .navbar-toggler {
            border-color: var(--border-accent-color);
            padding: 0.35rem 0.65rem;
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(233, 69, 96, 0.9)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2.5' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        .user-funds-clickable { /* NEW/MODIFIED STYLE */
            font-size: 1rem;
            font-weight: 700;
            color: var(--green-accent-color);
            padding: 0.6rem 1.2rem; /* More rectangular padding */
            background-color: rgba(0, 255, 145, 0.15);
            border: 2px solid var(--green-accent-color);
            border-radius: 6px; /* Rectangular shape */
            text-shadow: 0 0 6px var(--green-accent-color);
            transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
            margin-right: 1rem;
            cursor: pointer; /* Indicates it's clickable */
            display: inline-block; /* Ensure padding and border are respected */
        }

            .user-funds-clickable:hover {
                transform: scale(1.05);
                box-shadow: 0 0 15px var(--green-accent-color);
                background-color: rgba(0, 255, 145, 0.25);
            }

        .btn {
            border-radius: 6px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            transition: all 0.25s ease-in-out;
            text-transform: uppercase;
            letter-spacing: 0.8px;
            border: none;
        }

        .btn-primary {
            background: var(--primary-accent-color);
            color: var(--text-light);
        }

            .btn-primary:hover {
                background: var(--primary-accent-hover);
                transform: translateY(-2px) scale(1.02);
                box-shadow: 0 5px 15px rgba(233, 69, 96, 0.3);
            }

        .btn-secondary {
            background-color: #5A6268;
            border-color: #5A6268;
            color: var(--text-light);
        }

            .btn-secondary:hover {
                background-color: #495057;
                border-color: #434a50;
                transform: translateY(-2px) scale(1.02);
                box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            }

        .btn-outline-light {
            color: var(--text-light);
            border: 2px solid var(--text-light) !important;
        }

            .btn-outline-light:hover {
                color: var(--background-dark-1);
                background-color: var(--text-light);
                box-shadow: 0 0 10px var(--text-light);
            }

        .auth-links .btn, .auth-links .nav-link {
            margin-left: 0.5rem;
        }

        .auth-links form.d-inline {
            margin-left: 0.5rem;
        }

        .auth-links .btn-link.nav-link {
            border: 1px solid var(--primary-accent-color);
            color: var(--primary-accent-color);
            border-radius: 6px;
            padding: 0.6rem 1rem;
        }

            .auth-links .btn-link.nav-link:hover {
                background-color: var(--primary-accent-color);
                color: var(--text-light);
                text-decoration: none;
            }

        .footer {
            background-color: var(--surface-color-opaque);
            color: var(--text-muted-color);
            padding: 2.5rem 0;
            margin-top: auto;
            font-size: 0.9em;
            border-top: 1px solid var(--border-color);
            text-align: center;
        }

            .footer a {
                color: var(--secondary-accent-color);
                font-weight: 500;
            }

                .footer a:hover {
                    color: var(--secondary-accent-hover);
                }

        .form-control, .form-select {
            background-color: rgba(0,0,0,0.2);
            border: 1px solid var(--border-color);
            color: var(--text-color);
            border-radius: 6px;
            padding: 0.75rem 1rem;
            transition: border-color var(--animation-duration-fast) ease, box-shadow var(--animation-duration-fast) ease;
        }

            .form-control:focus, .form-select:focus {
                background-color: rgba(0,0,0,0.3);
                border-color: var(--primary-accent-color);
                box-shadow: 0 0 0 0.25rem rgba(233, 69, 96, 0.25);
                color: var(--text-light);
            }

        label.control-label {
            color: var(--text-muted-color);
            font-weight: 500;
            margin-bottom: .5rem;
        }

        .text-danger, .validation-summary-errors li {
            color: #ff4d4d !important;
        }

        hr {
            border-color: var(--border-color);
            opacity: 0.5;
        }

        /* Modal Styles */
        .modal-content {
            background-color: var(--surface-color-opaque);
            color: var(--text-color);
            border: 1px solid var(--border-color);
            border-radius: 10px;
        }

        .modal-header {
            border-bottom: 1px solid var(--border-accent-color);
            color: var(--primary-accent-color);
        }

            .modal-header .btn-close {
                filter: invert(1) grayscale(100%) brightness(200%); /* Makes default bootstrap X white */
            }

        .modal-body .form-label {
            color: var(--text-muted-color);
        }

        .modal-body .form-control {
            background-color: rgba(0,0,0,0.3);
            border-color: var(--border-color);
            color: var(--text-light);
        }

            .modal-body .form-control:focus {
                border-color: var(--primary-accent-color);
                box-shadow: 0 0 0 0.25rem rgba(233, 69, 96, 0.25);
            }

        .modal-footer {
            border-top: 1px solid var(--border-color);
        }

            .modal-footer .btn-primary {
                background-color: var(--green-accent-color);
                border-color: var(--green-accent-color);
                color: var(--text-dark-on-light-bg);
            }

                .modal-footer .btn-primary:hover {
                    background-color: var(--green-accent-hover);
                    border-color: var(--green-accent-hover);
                }

            .modal-footer .btn-secondary {
                background-color: #6c757d;
                border-color: #6c757d;
            }


        @@media (max-width: 991.98px) {
            .top-navbar {
                padding: 0.75rem 1rem;
            }

            .navbar-collapse {
                background-color: var(--surface-color-opaque);
                padding: 1rem;
                margin-top: 1px;
                border-bottom-left-radius: 6px;
                border-bottom-right-radius: 6px;
                border: 1px solid var(--border-color);
                border-top: none;
            }

            .navbar-nav {
                width: 100%;
                text-align: left;
            }

                .navbar-nav .nav-item {
                    margin-bottom: 0.5rem;
                }

                    .navbar-nav .nav-item:last-child {
                        margin-bottom: 0;
                    }

            .auth-links {
                width: 100%;
                display: flex;
                flex-direction: column;
                align-items: stretch;
                margin-top: 1rem;
            }

                .auth-links .user-funds-clickable {
                    margin-bottom: 0.75rem;
                    margin-right: 0;
                    text-align: center;
                }

                .auth-links .btn, .auth-links .nav-link, .auth-links form.d-inline {
                    width: 100%;
                    margin-top: 0.5rem;
                    margin-left: 0;
                    text-align: center;
                }

                .auth-links .btn-link.nav-link {
                    display: block;
                }

            body {
                padding-top: 70px;
            }
        }
    </style>
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header class="site-header">
        <nav class="top-navbar navbar navbar-expand-lg">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">11-A Gaming</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar"
                        aria-controls="mainNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="mainNavbar">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link @IsActive("Home", "Index")" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle @(IsActive("Players", "PlayerHire") == "active-link" || IsActive("Home", "TeamHire", "User") == "active-link" ? "active-link" : "")" href="#" id="hireDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Hire Services
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="hireDropdown">
                                <li><a class="dropdown-item @IsActive("Players", "PlayerHire")" asp-controller="Players" asp-action="PlayerHire">Hire a Player</a></li>
                                <li><a class="dropdown-item @IsActive("Home", "TeamHire")" asp-controller="Home" asp-action="TeamHire">Hire a Team</a></li>
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @IsActive("Home", "Basket")" asp-controller="Home" asp-action="Basket">Basket</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @IsActive("Home", "AboutDeveloper")" asp-controller="Home" asp-action="AboutDeveloper">About</a>
                        </li>
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle @(ViewContext.RouteData.Values["area"]?.ToString() == "Admin" ? "active-link" : "")" href="#" id="adminDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Admin
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="adminDropdown">
                                    <li><a class="dropdown-item @IsActive("Dashboard", "Index", "Admin")" asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
                                    <li><a class="dropdown-item @IsActive("Users", "Index", "Admin")" asp-area="Admin" asp-controller="Users" asp-action="Index">Manage Users</a></li>
                                    <li><a class="dropdown-item @IsActive("Content", "Players", "Admin")" asp-area="Admin" asp-controller="Content" asp-action="Players">Manage Players</a></li>
                                    <li><a class="dropdown-item @IsActive("Content", "Teams", "Admin")" asp-area="Admin" asp-controller="Content" asp-action="Teams">Manage Teams</a></li>
                                </ul>
                            </li>
                        }
                    </ul>
                    <div class="navbar-nav auth-links align-items-center ms-lg-auto">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var userBalance = await GetCurrentUserBalanceAsync();
                            <span class="user-funds-clickable" title="Your Balance - Click to Deposit" data-bs-toggle="modal" data-bs-target="#depositModal">
                                @userBalance.ToString("C2")
                            </span>
                            <a class="nav-link @IsActive("Home", "UserProfile")" asp-controller="Home" asp-action="UserProfile" title="My Profile">
                                @User.Identity.Name
                            </a>
                            <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="d-inline">
                                <button type="submit" class="btn btn-link nav-link">Logout</button>
                            </form>
                        }
                        else
                        {
                            <a class="btn btn-outline-light me-2 @IsActive("Account", "Login")" asp-controller="Account" asp-action="Login">Login</a>
                            <a class="btn btn-primary @IsActive("Account", "Register")" asp-controller="Account" asp-action="Register">Register</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container mt-4">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer text-center">
        <div class="container">
            &copy; @DateTime.Now.Year - 11-A Gaming Services - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy Policy</a>
        </div>
    </footer>

    @if (SignInManager.IsSignedIn(User))
    {
        <div class="modal fade" id="depositModal" tabindex="-1" aria-labelledby="depositModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="depositModalLabel">Deposit Funds</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form id="depositForm" asp-controller="Account" asp-action="Deposit" method="post">
                        @* Update controller/action as needed *@
                        <div class="modal-body">
                            <p>Your current balance: <strong id="modalCurrentBalance">@((await GetCurrentUserBalanceAsync()).ToString("C2"))</strong></p>
                            <div class="mb-3">
                                <label for="depositAmount" class="form-label">Amount to Deposit:</label>
                                <input type="number" class="form-control" id="depositAmount" name="amount" min="1" step="0.01" required>
                            </div>
                            <div id="depositErrorMessage" class="text-danger"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Deposit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @if (SignInManager.IsSignedIn(User))
    {
        <script>
            var depositModalElement = document.getElementById('depositModal');
            if (depositModalElement) {
                depositModalElement.addEventListener('show.bs.modal', function (event) {
                    // You could fetch updated balance here if needed, for now it uses server-rendered value
                    // var currentBalanceElement = document.getElementById('modalCurrentBalance');
                    // currentBalanceElement.textContent = ... ;
                });
            }
        </script>
    }
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>